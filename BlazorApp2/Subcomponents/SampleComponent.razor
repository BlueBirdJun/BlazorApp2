@using BlazorApp2.Services
@inject LoggingService LoggingService
@implements IDisposable

<h3>Sample Component</h3>

@code {
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        LoggingService.Logs.Add("SetParametersAsync"+GetNumber());
        await base.SetParametersAsync(parameters);
    }
    int i = 0;
    private string GetNumber()
    {
        i++;        
        return $" {i} time:{DateTime.Now.ToString("mm:ss:d")}";
    }

    protected override void OnAfterRender(bool firstRender) => LoggingService.Logs.Add("OnAfterRender"+GetNumber());
    protected override async Task OnAfterRenderAsync(bool firstRender) => LoggingService.Logs.Add("OnAfterRenderAsync" + GetNumber());
    protected override void OnInitialized() => LoggingService.Logs.Add("OnInitialized" + GetNumber());
    protected override async Task OnInitializedAsync() => LoggingService.Logs.Add("OnInitializedAsync" + GetNumber());
    protected override void OnParametersSet() => LoggingService.Logs.Add("OnParametersSet" + GetNumber());
    protected override async Task OnParametersSetAsync() => LoggingService.Logs.Add("OnParametersSetAsync" + GetNumber());
    public void Dispose() => LoggingService.Logs.Add("Dispose" + GetNumber());
}